#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info "Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Register (book) web path
ynh_webpath_register "$app" "$domain" "$path_url"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path_url"
ynh_app_setting_set "$app" is_public "$is_public"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info "Installing dependencies..."

ynh_install_php --phpversion="7.2"

ynh_install_app_dependencies "$pkg_dependencies"

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
ynh_print_info "Creating a PostgreSQL database..."

ynh_psql_test_if_first_run

db_name=$(ynh_sanitize_dbid "$app")
db_user=$db_name
db_pwd=$(ynh_string_random)
ynh_app_setting_set "$app" db_name "$db_name"
ynh_app_setting_set "$app" db_pwd  "$db_pwd"

# Initialize database and store postgres password for upgrade
ynh_psql_setup_db "$db_user" "$db_name" "$db_pwd"

systemctl reload postgresql

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set "$app" final_path "$final_path"
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Configuring system user..."

# Create a system user
ynh_system_user_create "$app"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_print_info "Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config --phpversion="7.2"

#Ugly move waiting 'ynh_add_fpm_config --phpversion='' released
mv "/etc/php/7.0/fpm/pool.d/$app.conf" "/etc/php/7.2/fpm/pool.d/$app.conf"
systemctl reload php7.2-fpm

#=================================================
# INSTALL PHP DEPENDENCIES
#=================================================

chown -R "$app": "$final_path"

ynh_install_composer --workdir="$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# MODIFY A CONFIG FILE
#=================================================

config="$final_path/.env"
cp ../conf/.env "$config"

ynh_replace_string "__APP__"     "$app"      "$config"
ynh_replace_string "__DOMAIN__"  "$domain"   "$config"
ynh_replace_string "__PATH__"    "$path_url" "$config"
ynh_replace_string "__DB_NAME__" "$db_name"  "$config"
ynh_replace_string "__DB_USER__" "$db_user"  "$config"
ynh_replace_string "__DB_PWD__"  "$db_pwd"   "$config"

#=================================================
# STORE THE CHECKSUM OF THE CONFIG FILE
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$config"

#=================================================
# DEPLOYMENT
#=================================================

pushd "$final_path"
	php7.2 artisan -n key:generate --force
	php7.2 artisan config:clear
	php7.2 artisan config:cache
	php7.2 artisan route:cache
	php7.2 artisan storage:link
	php7.2 artisan migrate --force
	php7.2 artisan update
	php7.2 artisan horizon:purge
popd

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R root: "$final_path"
chown -R "$app": "$final_path/storage/"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Configuring SSOwat..."

# Make app public if necessary
if [ "$is_public" -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set "$app" unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Installation of $app completed"
